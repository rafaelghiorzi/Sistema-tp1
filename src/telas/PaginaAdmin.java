/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import classes.Aluno;
import classes.Professor;
import classes.UsuarioLogado;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static telas.TelaInicial.listaAlunos;
import static telas.TelaInicial.listaProfessores;

/**
 *
 * @author rafae
 */
public class PaginaAdmin extends javax.swing.JFrame {
    // ambos começam não selecionados
    private static Professor professorSelecionado = null;
    private static Aluno alunoSelecionado = null;

    /**
     * Creates new form PaginaAdmin
     */
    public PaginaAdmin() {
        initComponents();
        estadoInicial();
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("resources/gym.png"));
        this.setIconImage(icon.getImage());
        this.setTitle("Admin CodeFit");
    }

    private void estadoInicial() {
        
        emailInput.setText("");
        celularInput.setText("");
        nomeInput.setText("");
        botaoEditarInfo.setEnabled(false);
        botaoExcluir.setEnabled(false);
        carregarTabelaAluno();
        carregarTabelaProfessor();
    }
    
    
    private void carregarTabelaAluno() {
        DefaultTableModel modelo = new DefaultTableModel(new Object[]{"Aluno", "Reservas", "Plano", "CPF"}, 0);
        
        for (int i = 0; i < listaAlunos.size(); i++) {
            Object linha[] = new Object[] {
                listaAlunos.get(i).getNome(),
                Integer.toString(listaAlunos.get(i).getReservas().size()),
                listaAlunos.get(i).getPlano().toString(),
                listaAlunos.get(i).getCPF(),
            };
            modelo.addRow(linha);
            tabelaAluno.setModel(modelo);
        }
    }
    
    private void carregarTabelaProfessor() {
        DefaultTableModel modelo = new DefaultTableModel(new Object[]{"Professor", "Aulas", "Especialidade", "CPF"}, 0);
        
        for (int i = 0; i < listaProfessores.size(); i++ ) {
            Object linha[] = new Object[] {
                listaProfessores.get(i).getNome(),
                Integer.toString(listaProfessores.get(i).getAulas().size()),
                listaProfessores.get(i).getEspecialidade().toString(),
                listaProfessores.get(i).getCPF()
            };
            modelo.addRow(linha);
            tabelaProfessor.setModel(modelo);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        painelInfo = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        celularLabel = new javax.swing.JLabel();
        nomeLabel = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        celularInput = new javax.swing.JTextField();
        nomeInput = new javax.swing.JTextField();
        botaoEditarInfo = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAluno = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaProfessor = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        logout = new javax.swing.JMenu();
        voltar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painel.setBackground(new java.awt.Color(255, 255, 255));

        painelInfo.setBackground(new java.awt.Color(250, 250, 250));
        painelInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        infoLabel.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText("Informações");

        emailLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        emailLabel.setText("Email:");

        celularLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        celularLabel.setText("Celular:");

        nomeLabel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        nomeLabel.setText("Nome:");

        emailInput.setText("[email]");
        emailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailInputActionPerformed(evt);
            }
        });

        celularInput.setText("[celular]");

        nomeInput.setText("[nome]");

        botaoEditarInfo.setText("Alterar informações");
        botaoEditarInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoEditarInfoMouseClicked(evt);
            }
        });
        botaoEditarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarInfoActionPerformed(evt);
            }
        });

        botaoExcluir.setText("Excluir usuário");
        botaoExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoExcluirMouseClicked(evt);
            }
        });
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelInfoLayout = new javax.swing.GroupLayout(painelInfo);
        painelInfo.setLayout(painelInfoLayout);
        painelInfoLayout.setHorizontalGroup(
            painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelInfoLayout.createSequentialGroup()
                        .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(emailInput))
                    .addGroup(painelInfoLayout.createSequentialGroup()
                        .addComponent(celularLabel)
                        .addGap(7, 7, 7)
                        .addComponent(celularInput))
                    .addGroup(painelInfoLayout.createSequentialGroup()
                        .addComponent(nomeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeInput)
                            .addGroup(painelInfoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botaoExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botaoEditarInfo))
                                .addGap(0, 65, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        painelInfoLayout.setVerticalGroup(
            painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celularLabel)
                    .addComponent(celularInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(painelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeLabel)
                    .addComponent(nomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoEditarInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoExcluir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabelaAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Aluno", "Reservas", "Plano", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAlunoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAluno);

        tabelaProfessor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Professor", "Aulas", "Especialidade", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProfessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProfessorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaProfessor);

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(painelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jMenuBar1.add(logout);

        voltar.setText("Voltar");
        voltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voltarMouseClicked(evt);
            }
        });
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });
        jMenuBar1.add(voltar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        UsuarioLogado.limparSessao();
        this.dispose();
        TelaInicial tela = new TelaInicial();
        tela.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void emailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailInputActionPerformed

    private void botaoEditarInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoEditarInfoMouseClicked

    }//GEN-LAST:event_botaoEditarInfoMouseClicked

    private void botaoExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoExcluirMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoExcluirMouseClicked

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        if (professorSelecionado != null && alunoSelecionado != null) {
            JOptionPane.showMessageDialog(this, "Algo deu errado, tente novamente mais tarde", "Erro", JOptionPane.ERROR_MESSAGE);
        } else if (professorSelecionado != null) {
            // Aqui precisa vir tratamento para as reservas, aulas e afins
            listaProfessores.remove(professorSelecionado);
            JOptionPane.showMessageDialog(this, "Professor excluído com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            estadoInicial();
        } else if (alunoSelecionado != null) {
            listaAlunos.remove(alunoSelecionado);
            JOptionPane.showMessageDialog(this, "Aluno excluído com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            estadoInicial();
        }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void tabelaAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAlunoMouseClicked
        tabelaProfessor.clearSelection();
        int linha = tabelaAluno.getSelectedRow();
        alunoSelecionado = listaAlunos.get(linha);
        professorSelecionado = null;
        
        // arrumando botões
        botaoEditarInfo.setEnabled(true);
        botaoExcluir.setEnabled(true);
        
        emailInput.setText(alunoSelecionado.getEmail());
        celularInput.setText(alunoSelecionado.getCelular());
        nomeInput.setText(alunoSelecionado.getNome());
    }//GEN-LAST:event_tabelaAlunoMouseClicked

    private void tabelaProfessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProfessorMouseClicked
        tabelaAluno.clearSelection();
        int linha = tabelaProfessor.getSelectedRow();
        professorSelecionado = listaProfessores.get(linha);
        alunoSelecionado = null;

        // arrumando botões
        botaoEditarInfo.setEnabled(true);
        botaoExcluir.setEnabled(true);
        
        emailInput.setText(professorSelecionado.getEmail());
        celularInput.setText(professorSelecionado.getCelular());
        nomeInput.setText(professorSelecionado.getNome());
    }//GEN-LAST:event_tabelaProfessorMouseClicked

    private void botaoEditarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarInfoActionPerformed
        String email = emailInput.getText();
        String celular = celularInput.getText();
        String nome = nomeInput.getText();
        
        if (professorSelecionado != null && alunoSelecionado != null) {
            JOptionPane.showMessageDialog(this, "Algo deu errado, tente novamente mais tarde", "Erro", JOptionPane.ERROR_MESSAGE);
        } else if (professorSelecionado != null) {
            professorSelecionado.setNome(nome);
            professorSelecionado.setEmail(email);
            professorSelecionado.setCelular(celular);
            JOptionPane.showMessageDialog(this, "Professor editado com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            estadoInicial();
        } else if (alunoSelecionado != null) {
            alunoSelecionado.setNome(nome);
            alunoSelecionado.setEmail(email);
            alunoSelecionado.setCelular(celular);
            JOptionPane.showMessageDialog(this, "Aluno editado com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            estadoInicial();
        }
    }//GEN-LAST:event_botaoEditarInfoActionPerformed

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        UsuarioLogado.limparSessao();
        this.dispose();
        TelaInicial tela = new TelaInicial();
        tela.setVisible(true);
    }//GEN-LAST:event_logoutMouseClicked

    private void voltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voltarMouseClicked
        this.dispose();
    }//GEN-LAST:event_voltarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaginaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaginaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaginaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaginaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaginaAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEditarInfo;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JTextField celularInput;
    private javax.swing.JLabel celularLabel;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu logout;
    private javax.swing.JTextField nomeInput;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JPanel painel;
    private javax.swing.JPanel painelInfo;
    private javax.swing.JTable tabelaAluno;
    private javax.swing.JTable tabelaProfessor;
    private javax.swing.JMenu voltar;
    // End of variables declaration//GEN-END:variables
}
